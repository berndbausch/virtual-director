Red Hat Director uses Ironic to deploy the overcloud on baremetal nodes. 
Luckily, Ironic has drivers for virtual baremetal nodes: pxe-ssh, which
has been deprecated and replaced by VirtualBMC in Ocata
(https://docs.openstack.org/developer/tripleo-docs/environments/virtualbmc.html).

My concern is Red Hat OpenStack version 8, which is based on Liberty.
Consequently, I use the pxe_ssh driver.

What follows is based on section 2.5 of the Red Hat Baremetal Provisioning guide
https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/8/html/bare_metal_provisioning/configure_bare_metal_deployment#example_test_bare_metal_provisioning_with_ssh_and_virsh

**On the VM host**, create virtual machines:
# qemu-img create -f qcow2 -o preallocation=metadata overcloud-1.qcow2 60G 
# virt-install --ram 6000 --vcpus 2 --os-variant rhel7 --noautoconsole --vnc,listen=0.0.0.0 
               --disk path=/var/lib/libvirt/images/overcloud-1.qcow2,device=disk,bus=virtio,format=qcow2 
               --network network:3O-provision --network network:3O-external  
               --name overcloud-1 --cpu host --dry-run --print-xml > /tmp/overcloud-1.xml
# virsh define /tmp/overcloud-1.xml
(Reference: https://keithtenzer.com/2015/10/14/howto-openstack-deployment-using-tripleo-and-the-red-hat-openstack-director)

Don't start them up, but get their MAC addresses:
# virsh domiflist overcloud-1|grep provision
-          network    3O-provision virtio      52:54:00:2a:8c:74

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Excursion: Solving the problem of incorrectly numbered network interfaces
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The default setup requires the provisioning network to be net0 in IPXE. 
This probably means it should have an earlier PCI address than all other network
interfaces. You can test this by booting up the VM and entering the IPXE shell:
# virsh start overcloud-1 --paused
# virsh vncdisplay overcloud-1
Start a VNC client at this address, then resume the VM:
# virsh resume overcloud-1
Immediately go to the VNC console and hit ^B to enter the IPXE shell
IPXE> show mac
net0/mac:hex = 52:54:00:11:22:33
If the MAC address doesn't refer to the address from the domiflist command,
find out which interface has this address, e.g.
IPXE> show net1/mac
Then, on the undercloud, modify the IPXE boot interface in /httpboot/inspector.ipxe
..... BOOTIF=${net1/mac}
This only works if all other overcloud VMs have the same interface numbering.
Alternatively, change the PCI address in the VM so that the provisioning interface becomes net0.
End of excursion
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**On the undercloud**, ensure there is a baremetal flavor:
# openstack flavor create --id auto --ram 4096 --disk 58 --vcpus 2 baremetal

*On the undercloud**, create an ssh key and copy it to the VM host:
# ssh-keygen -t rsa -b 2048 -f virtkey
# ssh-copy-id -i virtkey root@VM_HOST

**On the undercloud**, set up the nodes for Ironic
First ensure that pxe_ssh is in the enabled_drivers in ironic.conf.
# openstack image list
Note the deploy kernel and ramdisk.
# ironic node-create -d pxe_ssh -n overcloud-1 -i ssh_virt_type=virsh -i ssh_username=root -i ssh_key_filename=virtkey -i ssh_address=VM_HOST_IP -i deploy_kernel=KERNEL_UUID -i deploy_ramdisk=INITRAMFS_UUID

Set nodes' MAC addresses obtained earlier. Use UUIDs; names don't work.
# ironic port-create -n NODE_UUID -a MAC_ADDRESS

Add the local boot property
# ironic node-update overcloud-1 add properties/capabilities="boot_option:local"

Make the nodes manageable, then inspect them
# ironic node-set-provision-state overcloud-1 manage
# ironic node-set-provision-state overcloud-1 inspect

